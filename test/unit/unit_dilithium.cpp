/*****************************************************************************
 * Copyright (C) Neil Smyth 2022                                             *
 *                                                                           *
 * This file is part of phantom.                                             *
 *                                                                           *
 * This file is subject to the terms and conditions defined in the file      *
 * 'LICENSE', which is part of this source code package.                     *
 *****************************************************************************/

#include <iostream>
#include <memory>
#include "./lest.hpp"
#include "schemes/signature/dilithium/dilithium_signature.hpp"

namespace phantom {
using namespace core;     // NOLINT
using namespace crypto;   // NOLINT
using namespace schemes;  // NOLINT


const lest::test specification[] =
{
    CASE("ExpandMask with seed")
    {
        uint8_t mu[32] = {0x7a, 0x24, 0xb6, 0x66, 0xda, 0x34, 0x5c, 0x98, 0xc3, 0xa4, 0x00, 0xaa, 0xfd, 0x14, 0xa5, 0x1a, 0x6c, 0x07, 0xd7, 0x48, 0xc6, 0xfc, 0x04, 0xfb, 0xd1, 0x30, 0x88, 0xed, 0x8b, 0x33, 0x94, 0x8d};
        uint8_t rho[32] = {0x49, 0xe2, 0xf0, 0x22, 0x24, 0xc5, 0x32, 0x5d, 0x8b, 0x57, 0x3f, 0x34, 0x87, 0x8c, 0x73, 0xcf, 0x93, 0x6a, 0xb1, 0x6c, 0x80, 0x4d, 0x4f, 0x9a, 0xf5, 0xc6, 0xe4, 0xc1, 0xb4, 0x8d, 0xdb, 0x38};
        uint8_t seed[64] = {0xEA, 0xCD, 0xC0, 0x82, 0x36, 0x1D, 0xE7, 0x10, 0x1B, 0x69, 0x6E, 0xE1, 0xA0, 0xA4, 0xF3, 0x51, 0x4A, 0x65, 0xB6, 0xCF, 0xB3, 0x42, 0x0B, 0xA4, 0x6A, 0x8D, 0x41, 0x10, 0x2F, 0xDF, 0xA2, 0x47,
                            0x34, 0x65, 0x17, 0xC0, 0xC9, 0xAD, 0xA1, 0x0E, 0x6A, 0x69, 0xB0, 0x6E, 0xB6, 0xCB, 0x6F, 0x88, 0x29, 0xB7, 0xE5, 0xB5, 0x87, 0xA0, 0x1C, 0xCE, 0x4B, 0xBA, 0x61, 0x63, 0xA2, 0xC5, 0xC2, 0x28};
        int32_t ref_y[4][256] = {
            {  -59363,    -7373,    61286,   -83056,  -130063,   120223,   -64481,   -73735,  -107089,    32825,  -100370,    56783,    56830,      421,   -46901,   101092,     -444,    75764,   -70601,   131068,    16992,    41071,   -28277,    37997,    78039,    50325,     5230,     6887,   -75127,   -97479,     2712,    36512,    71153,   -81903,    81480,    66521,    91102,   100184,    89481,  -106390,   101546,     -533,   125462,    75453,   -40580,  -106525,   114526,    60299,    36845,  -129243,   102007,   -32690,  -106526,    73796,    25389,    48144,  -107082,    45417,    -9194,    28947,   105194,    51090,    95808,   128388,    32131,   102877,   -43256,    50911,   -21795,     5511,    24731,    80160,   127682,    21905,   -44827,   -92374,    86210,    29711,   -30410,    50072,   -78327,   -25161,     5294,    35436,   -19853,     2406,    68743,    91834,    84532,  -107071,   115467,   -53714,     2019,  -105837,   120757,    23267,   -70157,    20807,   -46257,  -125605,    82751,   -63408,   109981,    95608,   -66465,   108867,   -96884,   -66313,  -109247,   106698,    60394,   -28136,   -75543,   115539,    32200,    51629,    22502,   -66436,    56478,   -88004,     2015,   -22652,   111338,   -78328,    15931,      535,  -125548,    17661,    34268,   -38901,    29030,   -99172,    53729,  -101912,    13799,     6148,    45909,    47629,     7279,    15849,     4672,   -67129,   -20056,   -26462,     7270,     -658,    37488,   -47123,    76166,   -66248,   -51360,   -90010,   -76403,   -72337,    71430,  -112188,    34494,    82720,   -24855,    -2568,  -123447,   -68645,   -56876,     1888,  -111184,    88568,   128873,    67333,  -128480,  -125787,   -54918,  -107001,    26338,   -88196,      564,  -114044,   -91844,   -15196,    15144,    -9657,  -110617,    23259,    97209,   -55610,      -14,   116039,    86070,    43292,    -8687,   -78942,    73291,  -121021,  -108151,  -105293,  -115342,   -18620,    61670,   -62417,   -15308,    45320,    19611,  -117069,    32142,   115660,   -82519,    -6597,    36120,    60913,  -129666,   -93462,  -104857,    41886,    61615,    64872,   120992,    73773,  -104588,    70161,    53867,   -73874,    90214,   -15721,   101771,    60578,    61195,  -118344,    91483,   -98579,    67145,   -75637,   -10049,    45934,  -128863,    17978,   -57906,    80665,   -21793,    73719,  -128304,  -120135,   -85699,    -9993,   127575,    93914,    76538,    10408,    14740,   -65563,    82233,    75671,   117691,   -64486,    33795,    87211,    10833,   -76652},
            { -102116,    39894,   -22555,    74944,    91671,   -14462,  -119404,  -120255,   -75864,  -113262,   -83602,    37475,   101290,  -100495,    33128,   -20331,    -8783,    10124,    80404,    20915,    53267,      879,    15114,   117702,  -115034,    74501,    89961,    44074,   -44542,   -36882,    37110,   -20246,    92954,   -32684,   -85520,    96834,  -109106,   -47309,   -66417,    47365,    85525,   115455,   116399,   -34446,    16967,    75102,   -67193,   -33260,   -49241,   -85520,   -65864,   -50898,    69944,   -46185,    91637,   -82041,   -83131,    17875,   115234,   103273,   -85072,    77986,   123929,   123758,   -18366,   -66400,   114686,    55241,   125045,   -95083,    84750,    44136,  -111181,    36450,    85284,    21449,    34632,    19930,    51408,    14642,   -74919,   -58819,   -65254,    29835,   103417,     7947,     3661,    71867,   -77487,    68679,    32582,   -70563,    52465,   -19453,   -23397,  -115885,  -130479,   -22181,    33433,    36823,    69614,    63467,   -30746,     7159,    53476,   120762,   -38371,   -99583,   -52407,    46775,   -81797,  -117128,  -105074,  -113076,     3387,   -11710,   -96166,   -81977,   -97560,  -102149,   -53071,    69896,    -8381,    17063,    61295,     -620,   101905,  -121926,   -36121,   113856,   -96290,   -31567,    -9064,   -55116,     9132,   -20041,   -51913,   124761,   -88227,    58655,    19317,  -119037,   -34020,    60028,   -82795,   -24774,   -66817,  -113104,  -120545,    45889,   -15109,   -91965,   -67144,   -77371,   -12433,    -8507,    36712,    21770,   128142,   103166,     2333,   -15196,    -4870,   -47007,   -71142,    63793,    94517,   -82143,     4709,  -117994,    63357,   -96661,    55270,   106388,    15806,   -87864,   -28992,     9861,   -86208,    62368,    77136,   -43961,    56856,  -102510,   -51228,   -11712,    82608,    52436,    12303,    -4449,    78994,    94387,  -130813,  -100063,    -9340,    48541,  -106453,    16324,    58846,   -33021,    44019,    14117,    65677,   129271,    42362,   -31174,    40524,   -74675,    14865,    49462,  -104478,   -13560,   -60910,    84490,   -25359,   -70195,    28761,    58462,   129989,    84646,   -50885,   -20535,   -48892,  -127344,   -46596,   116675,   117442,   112269,   -51150,   -55161,    -2045,   -16130,   -57984,   -87065,   -18782,    57098,    73803,   127497,    50347,    97317,  -125915,    75019,   -36387,    32278,    16206,    55332,    86336,  -122471,    97504,    83796,    67660,    87260,   -40917,   -34479,     -356,   -68463},
            { -39425,   -15538,   -95411,   -38732,   -89228,   -56895,   -70510,  -121418,     9843,    31923,  -108510,    65645,    84620,  -121345,    34444,    -6055,    92643,  -102604,   -75882,    -5429,   107246,   -94558,  -129128,   117139,   -13707,   -90062,    71021,    95400,    43557,    65478,   -90731,   -71533,   -37404,   -95646,   -64833,   -73882,   -58158,     5176,   -22706,    22372,    -9672,   -39737,  -100418,  -122366,    82835,   -26942,    66720,    -1740,   -18441,   116299,   109208,   100649,   -90430,   104711,   -76705,   -46320,     2924,   -39045,  -109343,   -71296,    95004,   -69942,  -104935,    12015,    -9959,    60332,    95362,    32905,   -89697,   120603,    70411,   -58734,  -113818,   105550,   -98793,    68625,   -78065,   -40802,   -56152,    -4454,   103513,    93445,   -71064,    17805,    -6254,    85656,      200,   -22802,    32065,   -74763,   -74777,    22911,   -19459,   -78448,    -6177,  -117868,   111576,    14811,   -57433,   -46123,    87912,   -69999,     8490,   108656,   121301,  -122287,    87478,   -78586,  -129658,  -125617,    75018,   111733,    84887,    -9102,   119886,   -52403,   -41280,   -75179,    85906,   -78731,   -19941,    -6609,   -90811,    18113,    54942,  -101458,    66324,   -23411,    83593,  -119048,  -118177,  -130613,   -30129,    76305,   122498,    74382,   110909,   -83340,    60855,   -81731,   -75700,   -36320,     2377,    97975,   -70696,  -125124,   117135,    14530,    58750,    44353,   -19055,   109324,    11462,    92831,   -72557,    43509,   -98864,    54077,   -66130,    58007,   130215,   -96044,   117955,   102561,    63180,   105109,    28194,   -73939,   -96441,     4055,   -84760,    45728,    16404,     7018,    48702,   -63939,    19235,    77853,    14753,   113433,  -106127,   109508,  -122180,   -30260,    -4378,   -99086,    55202,   -49659,    37752,    44112,    65502,   -68174,   -52740,   112554,   -21127,    17156,    53101,   127581,  -127475,    82819,   -90058,   -55942,  -129562,   -13633,   -78007,    35740,   -96704,    73273,    51263,  -122699,  -125333,    85595,    10274,    42124,   -38304,   -80715,  -116551,     8925,    79627,    56769,    74946,    60243,    -8196,   -17426,    20019,   -84977,   100810,    20058,   -35617,    -8326,   106668,    22023,    62161,    49049,   129531,    -7311,   -14267,    34940,   119069,   -33816,   106052,   -82614,    75754,    22470,    -5555,    76112,   -16732,    61936,    48450,   107193,   -46434,   -39253,   124314,   109986,    59405,  -126031},
            { -124178,    61779,    57778,    67036,    93021,   103705,  -107232,   119121,   130601,   -25494,   -11150,   -93584,  -125306,    58732,   -61690,   -45991,   126755,   -95777,  -130255,    88422,    73408,   -54798,   -50919,   109096,   122279,   -56916,    21152,    84313,    75910,   -19560,    57378,    97861,    76238,   107326,    89300,  -130566,  -125522,   -24508,    61713,    66874,  -114331,    56835,   -40135,    87103,   -53859,    78689,   115065,   -79367,    96683,    23652,  -120004,   -59343,   -80543,    35828,    44042,    61032,   100790,     9248,  -101347,     6357,   -41377,   -25411,    90896,   -55763,    29310,    41301,   112958,  -101554,   -95042,    51459,   -78707,   -51125,   -59028,   -28401,   -51927,   -47359,    79210,   117604,  -107832,    40712,   -12699,   -26115,    47354,    50442,  -112110,   -51366,   -69421,   -64965,   118187,    68180,    45831,    61007,   118509,    80641,   -39990,   -90832,    39628,  -104961,    96463,   109853,    76709,  -106992,   -48358,    97789,   121792,    90104,     5031,   -74001,   122575,   -72110,   -61398,    74547,   -50356,    65439,    88932,  -112671,    10880,   126658,    20689,    33342,    78449,     3743,    22292,   100773,    75309,  -116308,    -3256,   112056,  -128990,  -113863,   -50665,   -65359,   -69801,   -14653,    54612,   -11381,    12040,    60284,   -43418,    10224,    66674,  -113044,   108443,   -19884,    43331,    52826,   -77193,    16337,   -28047,   -38309,   -86544,   -84281,  -108911,   -69976,    85382,    18214,  -128741,   -18840,   -62929,    40023,  -104763,   -70219,  -114682,    55867,  -115711,    91483,    60489,     4995,    26108,    36084,    17244,   -10200,    -6141,  -101663,     2667,   126588,   105033,    47740,   -31980,    -5722,   -82904,   -20689,   103632,    61371,    84551,   -59814,    48815,    28675,   -32927,    44265,      -38,   -52485,   -68351,    15983,    57652,    13343,    48532,     2897,   109616,    14579,    55587,    65412,    15355,    73427,   -65483,    81883,    -7172,   -57454,   -80519,    26931,    13727,    77673,  -111238,   -17554,  -102407,    36965,   101331,  -104699,    40842,   -79493,   -70090,    71488,    73353,   -45709,   -69901,  -102401,   -98063,   -34915,   -33843,   106782,   120398,    86677,   -58141,    53911,  -100792,  -128479,   109498,   -98278,   121322,    10955,    66058,   -97692,   -33670,    46133,    45521,   -82072,   -92404,  -113513,    48276,  -109616,    11953,    34716,   130307,    -8013,   -29995,   121400}};
        uint32_t kappa = 0;
        uint32_t gamma_1 = 131072;
        uint32_t gamma_1_bits = 18;
        uint32_t q = 8380417;
        size_t l = 4;
        size_t n = 256;
        int32_t y[4*256] = {0};
        const uint8_t K[32] = {0x87, 0x58, 0x8e, 0x98, 0x8c, 0x4a, 0x42, 0x3b, 0x8b, 0xe4, 0x30, 0x5c, 0xc4, 0xf4, 0xb7, 0xf7, 0x4d, 0x37, 0x34, 0xec, 0xed, 0x4b, 0xec, 0x55, 0xfc, 0xf8, 0x6c, 0x3a, 0x5f, 0x36, 0x04, 0x9c};

        dilithium dut(0);
        dut.expand_mask(seed, kappa, gamma_1, gamma_1_bits, q, l, n, y, K);

        for (size_t j = 0; j < l; ++j) {
            for (size_t i = 0; i < n; ++i) {
                if (y[j*n+i] != ref_y[j][i]); {
                    std::cout << "i = " << static_cast<int>(i) << ",j = " << static_cast<int>(j) << std::endl;
                }
                EXPECT(y[j*n+i] == ref_y[j][i]);
            }
        }

        printf("A = ([");
        for (size_t j = 0; j < l; ++j) {
            for (size_t i = 0; i < n; ++i) {
                printf("%8d", y[256*j+i]);
                if (i < n-1) printf(", ");
                else if (i < l-1) printf("], [");
                else printf("])\n");
            }
        }
    },
};

}  // namespace phantom

int main(int argc, char *argv[])
{
    return lest::run(phantom::specification, argc, argv);
}

